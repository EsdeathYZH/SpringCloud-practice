2018-07-01 23:40:36 [INFO][com.esdeath.eurekaclient.EurekaClientApplication][logStartupProfileInfo][593]-> No active profile set, falling back to default profiles: default
2018-07-01 23:40:36 [INFO][org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext][prepareRefresh][583]-> Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@27d4a09: startup date [Sun Jul 01 23:40:36 GMT+08:00 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@294425a7
2018-07-01 23:40:37 [INFO][org.springframework.cloud.context.scope.GenericScope][setSerializationId][263]-> BeanFactory id=5dc9ceaa-6d24-38e0-bf38-4b1560762734
2018-07-01 23:40:37 [INFO][org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor][<init>][155]-> JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-01 23:40:37 [INFO][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization][327]-> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5d0b4f48] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-01 23:40:38 [INFO][org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer][initialize][92]-> Tomcat initialized with port(s): 1002 (http)
2018-07-01 23:40:38 [INFO][org.apache.catalina.core.StandardService][log][180]-> Starting service [Tomcat]
2018-07-01 23:40:38 [INFO][org.apache.catalina.core.StandardEngine][log][180]-> Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-01 23:40:38 [INFO][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]][log][180]-> Initializing Spring embedded WebApplicationContext
2018-07-01 23:40:38 [INFO][org.springframework.web.context.ContextLoader][prepareEmbeddedWebApplicationContext][276]-> Root WebApplicationContext: initialization completed in 1669 ms
2018-07-01 23:40:38 [INFO][org.springframework.boot.web.servlet.ServletRegistrationBean][onStartup][190]-> Mapping servlet: 'dispatcherServlet' to [/]
2018-07-01 23:40:38 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-01 23:40:38 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-01 23:40:38 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-01 23:40:38 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'requestContextFilter' to: [/*]
2018-07-01 23:40:39 [INFO][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter][initControllerAdviceCache][534]-> Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@27d4a09: startup date [Sun Jul 01 23:40:36 GMT+08:00 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@294425a7
2018-07-01 23:40:39 [INFO][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register][543]-> Mapped "{[/info],methods=[GET]}" onto public java.lang.String com.esdeath.eurekaclient.EurekaClientApplication.dc()
2018-07-01 23:40:39 [INFO][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register][543]-> Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-01 23:40:39 [INFO][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register][543]-> Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-01 23:40:39 [INFO][org.springframework.web.servlet.handler.SimpleUrlHandlerMapping][registerHandler][362]-> Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-01 23:40:39 [INFO][org.springframework.web.servlet.handler.SimpleUrlHandlerMapping][registerHandler][362]-> Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-01 23:40:39 [INFO][org.springframework.web.servlet.handler.SimpleUrlHandlerMapping][registerHandler][362]-> Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-01 23:40:39 [WARN][com.netflix.config.sources.URLConfigurationSource][<init>][121]-> No URLs will be polled as dynamic configuration sources.
2018-07-01 23:40:39 [INFO][com.netflix.config.sources.URLConfigurationSource][<init>][122]-> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-01 23:40:39 [WARN][com.netflix.config.sources.URLConfigurationSource][<init>][121]-> No URLs will be polled as dynamic configuration sources.
2018-07-01 23:40:39 [INFO][com.netflix.config.sources.URLConfigurationSource][<init>][122]-> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-01 23:40:39 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][afterSingletonsInstantiated][431]-> Registering beans for JMX exposure on startup
2018-07-01 23:40:39 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][918]-> Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-07-01 23:40:39 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][918]-> Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-07-01 23:40:39 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][918]-> Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-07-01 23:40:39 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][679]-> Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-07-01 23:40:39 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][679]-> Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-07-01 23:40:39 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][679]-> Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=27d4a09,type=ConfigurationPropertiesRebinder]
2018-07-01 23:40:40 [INFO][org.springframework.context.support.DefaultLifecycleProcessor][start][341]-> Starting beans in phase 0
2018-07-01 23:40:40 [INFO][org.springframework.cloud.netflix.eureka.InstanceInfoFactory][create][70]-> Setting initial instance status as: STARTING
2018-07-01 23:40:40 [INFO][com.netflix.discovery.DiscoveryClient][<init>][344]-> Initializing Eureka in region us-east-1
2018-07-01 23:40:40 [INFO][com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>][70]-> Using JSON encoding codec LegacyJacksonJson
2018-07-01 23:40:40 [INFO][com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>][71]-> Using JSON decoding codec LegacyJacksonJson
2018-07-01 23:40:40 [INFO][com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>][80]-> Using XML encoding codec XStreamXml
2018-07-01 23:40:40 [INFO][com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>][81]-> Using XML decoding codec XStreamXml
2018-07-01 23:40:41 [INFO][com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints][43]-> Resolving eureka endpoints via configuration
2018-07-01 23:40:41 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][920]-> Disable delta property : false
2018-07-01 23:40:41 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][921]-> Single vip registry refresh property : null
2018-07-01 23:40:41 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][922]-> Force full registry fetch : false
2018-07-01 23:40:41 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][923]-> Application is null : false
2018-07-01 23:40:41 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][924]-> Registered Applications size is zero : true
2018-07-01 23:40:41 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][926]-> Application version is -1: true
2018-07-01 23:40:41 [INFO][com.netflix.discovery.DiscoveryClient][getAndStoreFullRegistry][1009]-> Getting all instance registry info from the eureka server
2018-07-01 23:40:41 [INFO][com.netflix.discovery.DiscoveryClient][getAndStoreFullRegistry][1018]-> The response status is 200
2018-07-01 23:40:41 [INFO][com.netflix.discovery.DiscoveryClient][initScheduledTasks][1244]-> Starting heartbeat executor: renew interval is: 30
2018-07-01 23:40:41 [INFO][com.netflix.discovery.InstanceInfoReplicator][<init>][59]-> InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-07-01 23:40:41 [INFO][com.netflix.discovery.DiscoveryClient][<init>][425]-> Discovery Client initialized at timestamp 1530459641883 with initial instances count: 0
2018-07-01 23:40:41 [INFO][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry][register][40]-> Registering application eureka-client with eureka with status UP
2018-07-01 23:40:41 [INFO][com.netflix.discovery.DiscoveryClient][notify][1279]-> Saw local status change event StatusChangeEvent [timestamp=1530459641926, current=UP, previous=STARTING]
2018-07-01 23:40:41 [INFO][com.netflix.discovery.DiscoveryClient][register][795]-> DiscoveryClient_EUREKA-CLIENT/LAPTOP-MOM0E0E6:eureka-client:1002: registering service...
2018-07-01 23:40:42 [INFO][org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer][start][216]-> Tomcat started on port(s): 1002 (http)
2018-07-01 23:40:42 [INFO][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration][onApplicationEvent][117]-> Updating port to 1002
2018-07-01 23:40:42 [INFO][com.esdeath.eurekaclient.EurekaClientApplication][logStarted][57]-> Started EurekaClientApplication in 8.417 seconds (JVM running for 10.11)
2018-07-01 23:40:42 [INFO][com.netflix.discovery.DiscoveryClient][register][804]-> DiscoveryClient_EUREKA-CLIENT/LAPTOP-MOM0E0E6:eureka-client:1002 - registration status: 204
2018-07-01 23:41:11 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][920]-> Disable delta property : false
2018-07-01 23:41:11 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][921]-> Single vip registry refresh property : null
2018-07-01 23:41:11 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][922]-> Force full registry fetch : false
2018-07-01 23:41:11 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][923]-> Application is null : false
2018-07-01 23:41:11 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][924]-> Registered Applications size is zero : true
2018-07-01 23:41:11 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][926]-> Application version is -1: false
2018-07-01 23:41:11 [INFO][com.netflix.discovery.DiscoveryClient][getAndStoreFullRegistry][1009]-> Getting all instance registry info from the eureka server
2018-07-01 23:41:11 [INFO][com.netflix.discovery.DiscoveryClient][getAndStoreFullRegistry][1018]-> The response status is 200
2018-07-01 23:44:49 [INFO][com.esdeath.eurekaclient.EurekaClientApplication][logStartupProfileInfo][593]-> No active profile set, falling back to default profiles: default
2018-07-01 23:44:49 [INFO][org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext][prepareRefresh][583]-> Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1c481ff2: startup date [Sun Jul 01 23:44:49 GMT+08:00 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1aa7ecca
2018-07-01 23:44:50 [INFO][org.springframework.cloud.context.scope.GenericScope][setSerializationId][263]-> BeanFactory id=5dc9ceaa-6d24-38e0-bf38-4b1560762734
2018-07-01 23:44:50 [INFO][org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor][<init>][155]-> JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-01 23:44:50 [INFO][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization][327]-> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2574ced7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-01 23:44:50 [INFO][org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer][initialize][92]-> Tomcat initialized with port(s): 1002 (http)
2018-07-01 23:44:50 [INFO][org.apache.catalina.core.StandardService][log][180]-> Starting service [Tomcat]
2018-07-01 23:44:50 [INFO][org.apache.catalina.core.StandardEngine][log][180]-> Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-01 23:44:51 [INFO][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]][log][180]-> Initializing Spring embedded WebApplicationContext
2018-07-01 23:44:51 [INFO][org.springframework.web.context.ContextLoader][prepareEmbeddedWebApplicationContext][276]-> Root WebApplicationContext: initialization completed in 1875 ms
2018-07-01 23:44:51 [INFO][org.springframework.boot.web.servlet.ServletRegistrationBean][onStartup][190]-> Mapping servlet: 'dispatcherServlet' to [/]
2018-07-01 23:44:51 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-01 23:44:51 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-01 23:44:51 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-01 23:44:51 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'requestContextFilter' to: [/*]
2018-07-01 23:44:52 [INFO][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter][initControllerAdviceCache][534]-> Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1c481ff2: startup date [Sun Jul 01 23:44:49 GMT+08:00 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1aa7ecca
2018-07-01 23:44:52 [INFO][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register][543]-> Mapped "{[/info],methods=[GET]}" onto public java.lang.String com.esdeath.eurekaclient.EurekaClientApplication.dc(javax.servlet.http.HttpServletRequest)
2018-07-01 23:44:52 [INFO][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register][543]-> Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-01 23:44:52 [INFO][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register][543]-> Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-01 23:44:52 [INFO][org.springframework.web.servlet.handler.SimpleUrlHandlerMapping][registerHandler][362]-> Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-01 23:44:52 [INFO][org.springframework.web.servlet.handler.SimpleUrlHandlerMapping][registerHandler][362]-> Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-01 23:44:52 [INFO][org.springframework.web.servlet.handler.SimpleUrlHandlerMapping][registerHandler][362]-> Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-01 23:44:52 [WARN][com.netflix.config.sources.URLConfigurationSource][<init>][121]-> No URLs will be polled as dynamic configuration sources.
2018-07-01 23:44:52 [INFO][com.netflix.config.sources.URLConfigurationSource][<init>][122]-> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-01 23:44:52 [WARN][com.netflix.config.sources.URLConfigurationSource][<init>][121]-> No URLs will be polled as dynamic configuration sources.
2018-07-01 23:44:52 [INFO][com.netflix.config.sources.URLConfigurationSource][<init>][122]-> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-01 23:44:52 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][afterSingletonsInstantiated][431]-> Registering beans for JMX exposure on startup
2018-07-01 23:44:52 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][918]-> Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-07-01 23:44:52 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][918]-> Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-07-01 23:44:52 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][918]-> Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-07-01 23:44:52 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][679]-> Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-07-01 23:44:53 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][679]-> Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-07-01 23:44:53 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][679]-> Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1c481ff2,type=ConfigurationPropertiesRebinder]
2018-07-01 23:44:53 [INFO][org.springframework.context.support.DefaultLifecycleProcessor][start][341]-> Starting beans in phase 0
2018-07-01 23:44:53 [INFO][org.springframework.cloud.netflix.eureka.InstanceInfoFactory][create][70]-> Setting initial instance status as: STARTING
2018-07-01 23:44:53 [INFO][com.netflix.discovery.DiscoveryClient][<init>][344]-> Initializing Eureka in region us-east-1
2018-07-01 23:44:53 [INFO][com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>][70]-> Using JSON encoding codec LegacyJacksonJson
2018-07-01 23:44:53 [INFO][com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>][71]-> Using JSON decoding codec LegacyJacksonJson
2018-07-01 23:44:53 [INFO][com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>][80]-> Using XML encoding codec XStreamXml
2018-07-01 23:44:53 [INFO][com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>][81]-> Using XML decoding codec XStreamXml
2018-07-01 23:44:53 [INFO][com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints][43]-> Resolving eureka endpoints via configuration
2018-07-01 23:44:54 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][920]-> Disable delta property : false
2018-07-01 23:44:54 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][921]-> Single vip registry refresh property : null
2018-07-01 23:44:54 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][922]-> Force full registry fetch : false
2018-07-01 23:44:54 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][923]-> Application is null : false
2018-07-01 23:44:54 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][924]-> Registered Applications size is zero : true
2018-07-01 23:44:54 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][926]-> Application version is -1: true
2018-07-01 23:44:54 [INFO][com.netflix.discovery.DiscoveryClient][getAndStoreFullRegistry][1009]-> Getting all instance registry info from the eureka server
2018-07-01 23:44:54 [INFO][com.netflix.discovery.DiscoveryClient][getAndStoreFullRegistry][1018]-> The response status is 200
2018-07-01 23:44:54 [INFO][com.netflix.discovery.DiscoveryClient][initScheduledTasks][1244]-> Starting heartbeat executor: renew interval is: 30
2018-07-01 23:44:54 [INFO][com.netflix.discovery.InstanceInfoReplicator][<init>][59]-> InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-07-01 23:44:54 [INFO][com.netflix.discovery.DiscoveryClient][<init>][425]-> Discovery Client initialized at timestamp 1530459894530 with initial instances count: 1
2018-07-01 23:44:54 [INFO][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry][register][40]-> Registering application eureka-client with eureka with status UP
2018-07-01 23:44:54 [INFO][com.netflix.discovery.DiscoveryClient][notify][1279]-> Saw local status change event StatusChangeEvent [timestamp=1530459894562, current=UP, previous=STARTING]
2018-07-01 23:44:54 [INFO][com.netflix.discovery.DiscoveryClient][register][795]-> DiscoveryClient_EUREKA-CLIENT/LAPTOP-MOM0E0E6:eureka-client:1002: registering service...
2018-07-01 23:44:54 [INFO][com.netflix.discovery.DiscoveryClient][register][804]-> DiscoveryClient_EUREKA-CLIENT/LAPTOP-MOM0E0E6:eureka-client:1002 - registration status: 204
2018-07-01 23:44:54 [INFO][org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer][start][216]-> Tomcat started on port(s): 1002 (http)
2018-07-01 23:44:54 [INFO][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration][onApplicationEvent][117]-> Updating port to 1002
2018-07-01 23:44:54 [INFO][com.esdeath.eurekaclient.EurekaClientApplication][logStarted][57]-> Started EurekaClientApplication in 8.17 seconds (JVM running for 10.378)
2018-07-01 23:48:20 [INFO][com.esdeath.eurekaclient.EurekaClientApplication][logStartupProfileInfo][593]-> No active profile set, falling back to default profiles: default
2018-07-01 23:48:20 [INFO][org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext][prepareRefresh][583]-> Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@386f0da3: startup date [Sun Jul 01 23:48:20 GMT+08:00 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@49ec71f8
2018-07-01 23:48:22 [INFO][org.springframework.cloud.context.scope.GenericScope][setSerializationId][263]-> BeanFactory id=09c4c457-909e-36a6-8567-45caa9874d7c
2018-07-01 23:48:22 [INFO][org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor][<init>][155]-> JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-01 23:48:23 [INFO][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization][327]-> Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$604298a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-01 23:48:23 [INFO][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization][327]-> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4a2ff565] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-01 23:48:23 [INFO][org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer][initialize][92]-> Tomcat initialized with port(s): 1002 (http)
2018-07-01 23:48:23 [INFO][org.apache.catalina.core.StandardService][log][180]-> Starting service [Tomcat]
2018-07-01 23:48:23 [INFO][org.apache.catalina.core.StandardEngine][log][180]-> Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-01 23:48:23 [INFO][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]][log][180]-> Initializing Spring embedded WebApplicationContext
2018-07-01 23:48:23 [INFO][org.springframework.web.context.ContextLoader][prepareEmbeddedWebApplicationContext][276]-> Root WebApplicationContext: initialization completed in 2915 ms
2018-07-01 23:48:24 [INFO][org.springframework.boot.web.servlet.ServletRegistrationBean][onStartup][190]-> Mapping servlet: 'dispatcherServlet' to [/]
2018-07-01 23:48:24 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'metricsFilter' to: [/*]
2018-07-01 23:48:24 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-01 23:48:24 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-01 23:48:24 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-01 23:48:24 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'requestContextFilter' to: [/*]
2018-07-01 23:48:24 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-07-01 23:48:24 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-07-01 23:48:25 [INFO][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter][initControllerAdviceCache][534]-> Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@386f0da3: startup date [Sun Jul 01 23:48:20 GMT+08:00 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@49ec71f8
2018-07-01 23:48:25 [INFO][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register][543]-> Mapped "{[/info],methods=[GET]}" onto public java.lang.String com.esdeath.eurekaclient.EurekaClientApplication.dc(javax.servlet.http.HttpServletRequest)
2018-07-01 23:48:25 [INFO][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register][543]-> Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-01 23:48:25 [INFO][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register][543]-> Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-01 23:48:25 [INFO][org.springframework.web.servlet.handler.SimpleUrlHandlerMapping][registerHandler][362]-> Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-01 23:48:25 [INFO][org.springframework.web.servlet.handler.SimpleUrlHandlerMapping][registerHandler][362]-> Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-01 23:48:25 [INFO][org.springframework.web.servlet.handler.SimpleUrlHandlerMapping][registerHandler][362]-> Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-01 23:48:26 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-07-01 23:48:26 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-07-01 23:48:26 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-01 23:48:26 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-07-01 23:48:26 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-07-01 23:48:26 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-01 23:48:26 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-01 23:48:26 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-07-01 23:48:26 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-07-01 23:48:26 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-07-01 23:48:26 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-01 23:48:26 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-07-01 23:48:26 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-07-01 23:48:26 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-07-01 23:48:26 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-07-01 23:48:26 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-01 23:48:26 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-01 23:48:26 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-01 23:48:26 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-01 23:48:26 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-01 23:48:26 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-07-01 23:48:26 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-07-01 23:48:26 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-07-01 23:48:26 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-01 23:48:26 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-07-01 23:48:26 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-01 23:48:26 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-01 23:48:26 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-07-01 23:48:26 [WARN][com.netflix.config.sources.URLConfigurationSource][<init>][121]-> No URLs will be polled as dynamic configuration sources.
2018-07-01 23:48:26 [INFO][com.netflix.config.sources.URLConfigurationSource][<init>][122]-> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-01 23:48:26 [WARN][com.netflix.config.sources.URLConfigurationSource][<init>][121]-> No URLs will be polled as dynamic configuration sources.
2018-07-01 23:48:26 [INFO][com.netflix.config.sources.URLConfigurationSource][<init>][122]-> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-01 23:48:26 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][afterSingletonsInstantiated][431]-> Registering beans for JMX exposure on startup
2018-07-01 23:48:26 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][918]-> Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-07-01 23:48:26 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][918]-> Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-07-01 23:48:26 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][918]-> Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-07-01 23:48:26 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][918]-> Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-07-01 23:48:26 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][918]-> Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-07-01 23:48:26 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][918]-> Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-07-01 23:48:26 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][679]-> Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-07-01 23:48:26 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][679]-> Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-07-01 23:48:26 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][679]-> Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-07-01 23:48:26 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][679]-> Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-07-01 23:48:26 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][679]-> Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=386f0da3,type=ConfigurationPropertiesRebinder]
2018-07-01 23:48:26 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][679]-> Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-07-01 23:48:27 [INFO][org.springframework.context.support.DefaultLifecycleProcessor][start][341]-> Starting beans in phase 0
2018-07-01 23:48:27 [INFO][org.springframework.cloud.netflix.eureka.InstanceInfoFactory][create][70]-> Setting initial instance status as: STARTING
2018-07-01 23:48:27 [INFO][com.netflix.discovery.DiscoveryClient][<init>][344]-> Initializing Eureka in region us-east-1
2018-07-01 23:48:27 [INFO][com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>][70]-> Using JSON encoding codec LegacyJacksonJson
2018-07-01 23:48:27 [INFO][com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>][71]-> Using JSON decoding codec LegacyJacksonJson
2018-07-01 23:48:27 [INFO][com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>][80]-> Using XML encoding codec XStreamXml
2018-07-01 23:48:27 [INFO][com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>][81]-> Using XML decoding codec XStreamXml
2018-07-01 23:48:27 [INFO][com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints][43]-> Resolving eureka endpoints via configuration
2018-07-01 23:48:28 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][920]-> Disable delta property : false
2018-07-01 23:48:28 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][921]-> Single vip registry refresh property : null
2018-07-01 23:48:28 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][922]-> Force full registry fetch : false
2018-07-01 23:48:28 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][923]-> Application is null : false
2018-07-01 23:48:28 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][924]-> Registered Applications size is zero : true
2018-07-01 23:48:28 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][926]-> Application version is -1: true
2018-07-01 23:48:28 [INFO][com.netflix.discovery.DiscoveryClient][getAndStoreFullRegistry][1009]-> Getting all instance registry info from the eureka server
2018-07-01 23:48:28 [INFO][com.netflix.discovery.DiscoveryClient][getAndStoreFullRegistry][1018]-> The response status is 200
2018-07-01 23:48:28 [INFO][com.netflix.discovery.DiscoveryClient][initScheduledTasks][1244]-> Starting heartbeat executor: renew interval is: 30
2018-07-01 23:48:28 [INFO][com.netflix.discovery.InstanceInfoReplicator][<init>][59]-> InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-07-01 23:48:28 [INFO][com.netflix.discovery.DiscoveryClient][<init>][425]-> Discovery Client initialized at timestamp 1530460108217 with initial instances count: 1
2018-07-01 23:48:28 [INFO][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry][register][40]-> Registering application eureka-client with eureka with status UP
2018-07-01 23:48:28 [INFO][com.netflix.discovery.DiscoveryClient][notify][1279]-> Saw local status change event StatusChangeEvent [timestamp=1530460108237, current=UP, previous=STARTING]
2018-07-01 23:48:28 [INFO][com.netflix.discovery.DiscoveryClient][register][795]-> DiscoveryClient_EUREKA-CLIENT/LAPTOP-MOM0E0E6:eureka-client:1002: registering service...
2018-07-01 23:48:28 [INFO][com.netflix.discovery.DiscoveryClient][register][804]-> DiscoveryClient_EUREKA-CLIENT/LAPTOP-MOM0E0E6:eureka-client:1002 - registration status: 204
2018-07-01 23:48:28 [INFO][org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer][start][216]-> Tomcat started on port(s): 1002 (http)
2018-07-01 23:48:28 [INFO][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration][onApplicationEvent][117]-> Updating port to 1002
2018-07-01 23:48:28 [INFO][com.esdeath.eurekaclient.EurekaClientApplication][logStarted][57]-> Started EurekaClientApplication in 11.709 seconds (JVM running for 15.168)
2018-07-01 23:49:30 [INFO][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]][log][180]-> Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-01 23:49:30 [INFO][org.springframework.web.servlet.DispatcherServlet][initServletBean][489]-> FrameworkServlet 'dispatcherServlet': initialization started
2018-07-01 23:49:30 [INFO][org.springframework.web.servlet.DispatcherServlet][initServletBean][508]-> FrameworkServlet 'dispatcherServlet': initialization completed in 23 ms
2018-07-01 23:53:28 [INFO][com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints][43]-> Resolving eureka endpoints via configuration
2018-07-01 23:53:30 [ERROR][com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient][execute][91]-> Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:815)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1379)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 26 common frames omitted
2018-07-01 23:53:30 [ERROR][com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient][execute][91]-> Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:170)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1047)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:929)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 common frames omitted
2018-07-01 23:53:30 [WARN][com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient][execute][129]-> Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-01 23:53:30 [WARN][com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient][execute][129]-> Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-01 23:53:32 [ERROR][com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient][execute][83]-> Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:170)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1047)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:929)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
2018-07-01 23:53:32 [ERROR][com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient][execute][83]-> Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:815)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1379)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 common frames omitted
2018-07-01 23:53:32 [WARN][com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient][execute][129]-> Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-01 23:53:32 [ERROR][com.netflix.discovery.DiscoveryClient][renew][824]-> DiscoveryClient_EUREKA-CLIENT/LAPTOP-MOM0E0E6:eureka-client:1002 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:815)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1379)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-07-01 23:53:32 [WARN][com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient][execute][129]-> Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-07-01 23:53:32 [ERROR][com.netflix.discovery.DiscoveryClient][fetchRegistry][934]-> DiscoveryClient_EUREKA-CLIENT/LAPTOP-MOM0E0E6:eureka-client:1002 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1047)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:929)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-07-01 23:53:48 [INFO][com.esdeath.eurekaclient.EurekaClientApplication][logStartupProfileInfo][593]-> No active profile set, falling back to default profiles: default
2018-07-01 23:53:48 [INFO][org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext][prepareRefresh][583]-> Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@386f0da3: startup date [Sun Jul 01 23:53:48 GMT+08:00 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@49ec71f8
2018-07-01 23:53:50 [INFO][org.springframework.cloud.context.scope.GenericScope][setSerializationId][263]-> BeanFactory id=09c4c457-909e-36a6-8567-45caa9874d7c
2018-07-01 23:53:50 [INFO][org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor][<init>][155]-> JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-01 23:53:50 [INFO][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization][327]-> Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$604298a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-01 23:53:50 [INFO][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization][327]-> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4a2ff565] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-01 23:53:50 [INFO][org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer][initialize][92]-> Tomcat initialized with port(s): 1002 (http)
2018-07-01 23:53:51 [INFO][org.apache.catalina.core.StandardService][log][180]-> Starting service [Tomcat]
2018-07-01 23:53:51 [INFO][org.apache.catalina.core.StandardEngine][log][180]-> Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-01 23:53:51 [INFO][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]][log][180]-> Initializing Spring embedded WebApplicationContext
2018-07-01 23:53:51 [INFO][org.springframework.web.context.ContextLoader][prepareEmbeddedWebApplicationContext][276]-> Root WebApplicationContext: initialization completed in 2806 ms
2018-07-01 23:53:51 [INFO][org.springframework.boot.web.servlet.ServletRegistrationBean][onStartup][190]-> Mapping servlet: 'dispatcherServlet' to [/]
2018-07-01 23:53:51 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'metricsFilter' to: [/*]
2018-07-01 23:53:51 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-01 23:53:51 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-01 23:53:51 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-01 23:53:51 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'requestContextFilter' to: [/*]
2018-07-01 23:53:51 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-07-01 23:53:51 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-07-01 23:53:52 [INFO][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter][initControllerAdviceCache][534]-> Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@386f0da3: startup date [Sun Jul 01 23:53:48 GMT+08:00 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@49ec71f8
2018-07-01 23:53:52 [INFO][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register][543]-> Mapped "{[/info],methods=[GET]}" onto public java.lang.String com.esdeath.eurekaclient.EurekaClientApplication.dc(javax.servlet.http.HttpServletRequest)
2018-07-01 23:53:52 [INFO][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register][543]-> Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-01 23:53:52 [INFO][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register][543]-> Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-01 23:53:52 [INFO][org.springframework.web.servlet.handler.SimpleUrlHandlerMapping][registerHandler][362]-> Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-01 23:53:52 [INFO][org.springframework.web.servlet.handler.SimpleUrlHandlerMapping][registerHandler][362]-> Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-01 23:53:53 [INFO][org.springframework.web.servlet.handler.SimpleUrlHandlerMapping][registerHandler][362]-> Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-01 23:53:53 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-07-01 23:53:53 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-07-01 23:53:53 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-01 23:53:53 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-07-01 23:53:53 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-07-01 23:53:53 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-07-01 23:53:53 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-07-01 23:53:53 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-07-01 23:53:53 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-01 23:53:53 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-07-01 23:53:53 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-07-01 23:53:53 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-07-01 23:53:53 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-01 23:53:53 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-01 23:53:53 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-01 23:53:53 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-01 23:53:53 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-07-01 23:53:53 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-07-01 23:53:53 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-01 23:53:53 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-07-01 23:53:53 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-01 23:53:53 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-07-01 23:53:53 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-01 23:53:53 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-01 23:53:53 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-07-01 23:53:53 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-01 23:53:53 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-01 23:53:53 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-07-01 23:53:54 [WARN][com.netflix.config.sources.URLConfigurationSource][<init>][121]-> No URLs will be polled as dynamic configuration sources.
2018-07-01 23:53:54 [INFO][com.netflix.config.sources.URLConfigurationSource][<init>][122]-> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-01 23:53:54 [WARN][com.netflix.config.sources.URLConfigurationSource][<init>][121]-> No URLs will be polled as dynamic configuration sources.
2018-07-01 23:53:54 [INFO][com.netflix.config.sources.URLConfigurationSource][<init>][122]-> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-01 23:53:54 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][afterSingletonsInstantiated][431]-> Registering beans for JMX exposure on startup
2018-07-01 23:53:54 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][918]-> Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-07-01 23:53:54 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][918]-> Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-07-01 23:53:54 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][918]-> Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-07-01 23:53:54 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][918]-> Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-07-01 23:53:54 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][918]-> Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-07-01 23:53:54 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][918]-> Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-07-01 23:53:54 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][679]-> Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-07-01 23:53:54 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][679]-> Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-07-01 23:53:54 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][679]-> Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-07-01 23:53:54 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][679]-> Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-07-01 23:53:54 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][679]-> Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=386f0da3,type=ConfigurationPropertiesRebinder]
2018-07-01 23:53:54 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][679]-> Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-07-01 23:53:55 [INFO][org.springframework.context.support.DefaultLifecycleProcessor][start][341]-> Starting beans in phase 0
2018-07-01 23:53:55 [INFO][org.springframework.cloud.netflix.eureka.InstanceInfoFactory][create][70]-> Setting initial instance status as: STARTING
2018-07-01 23:53:55 [INFO][com.netflix.discovery.DiscoveryClient][<init>][344]-> Initializing Eureka in region us-east-1
2018-07-01 23:53:55 [INFO][com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>][70]-> Using JSON encoding codec LegacyJacksonJson
2018-07-01 23:53:55 [INFO][com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>][71]-> Using JSON decoding codec LegacyJacksonJson
2018-07-01 23:53:55 [INFO][com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>][80]-> Using XML encoding codec XStreamXml
2018-07-01 23:53:55 [INFO][com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>][81]-> Using XML decoding codec XStreamXml
2018-07-01 23:53:56 [INFO][com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints][43]-> Resolving eureka endpoints via configuration
2018-07-01 23:53:56 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][920]-> Disable delta property : false
2018-07-01 23:53:56 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][921]-> Single vip registry refresh property : null
2018-07-01 23:53:56 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][922]-> Force full registry fetch : false
2018-07-01 23:53:56 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][923]-> Application is null : false
2018-07-01 23:53:56 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][924]-> Registered Applications size is zero : true
2018-07-01 23:53:56 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][926]-> Application version is -1: true
2018-07-01 23:53:56 [INFO][com.netflix.discovery.DiscoveryClient][getAndStoreFullRegistry][1009]-> Getting all instance registry info from the eureka server
2018-07-01 23:53:56 [INFO][com.netflix.discovery.DiscoveryClient][getAndStoreFullRegistry][1018]-> The response status is 200
2018-07-01 23:53:56 [INFO][com.netflix.discovery.DiscoveryClient][initScheduledTasks][1244]-> Starting heartbeat executor: renew interval is: 30
2018-07-01 23:53:56 [INFO][com.netflix.discovery.InstanceInfoReplicator][<init>][59]-> InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-07-01 23:53:56 [INFO][com.netflix.discovery.DiscoveryClient][<init>][425]-> Discovery Client initialized at timestamp 1530460436834 with initial instances count: 0
2018-07-01 23:53:56 [INFO][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry][register][40]-> Registering application eureka-client with eureka with status UP
2018-07-01 23:53:56 [INFO][com.netflix.discovery.DiscoveryClient][notify][1279]-> Saw local status change event StatusChangeEvent [timestamp=1530460436865, current=UP, previous=STARTING]
2018-07-01 23:53:56 [INFO][com.netflix.discovery.DiscoveryClient][register][795]-> DiscoveryClient_EUREKA-CLIENT/LAPTOP-MOM0E0E6:eureka-client:1002: registering service...
2018-07-01 23:53:57 [INFO][org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer][start][216]-> Tomcat started on port(s): 1002 (http)
2018-07-01 23:53:57 [INFO][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration][onApplicationEvent][117]-> Updating port to 1002
2018-07-01 23:53:57 [INFO][com.esdeath.eurekaclient.EurekaClientApplication][logStarted][57]-> Started EurekaClientApplication in 13.013 seconds (JVM running for 16.596)
2018-07-01 23:53:57 [INFO][com.netflix.discovery.DiscoveryClient][register][804]-> DiscoveryClient_EUREKA-CLIENT/LAPTOP-MOM0E0E6:eureka-client:1002 - registration status: 204
2018-07-01 23:54:24 [INFO][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]][log][180]-> Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-01 23:54:24 [INFO][org.springframework.web.servlet.DispatcherServlet][initServletBean][489]-> FrameworkServlet 'dispatcherServlet': initialization started
2018-07-01 23:54:24 [INFO][org.springframework.web.servlet.DispatcherServlet][initServletBean][508]-> FrameworkServlet 'dispatcherServlet': initialization completed in 23 ms
2018-07-01 23:54:26 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][920]-> Disable delta property : false
2018-07-01 23:54:26 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][921]-> Single vip registry refresh property : null
2018-07-01 23:54:26 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][922]-> Force full registry fetch : false
2018-07-01 23:54:26 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][923]-> Application is null : false
2018-07-01 23:54:26 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][924]-> Registered Applications size is zero : true
2018-07-01 23:54:26 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][926]-> Application version is -1: false
2018-07-01 23:54:26 [INFO][com.netflix.discovery.DiscoveryClient][getAndStoreFullRegistry][1009]-> Getting all instance registry info from the eureka server
2018-07-01 23:54:26 [INFO][com.netflix.discovery.DiscoveryClient][getAndStoreFullRegistry][1018]-> The response status is 200
2018-07-01 23:55:33 [INFO][com.esdeath.eurekaclient.EurekaClientApplication][logStartupProfileInfo][593]-> No active profile set, falling back to default profiles: default
2018-07-01 23:55:33 [INFO][org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext][prepareRefresh][583]-> Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@386f0da3: startup date [Sun Jul 01 23:55:33 GMT+08:00 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@49ec71f8
2018-07-01 23:55:34 [INFO][org.springframework.cloud.context.scope.GenericScope][setSerializationId][263]-> BeanFactory id=09c4c457-909e-36a6-8567-45caa9874d7c
2018-07-01 23:55:34 [INFO][org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor][<init>][155]-> JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-01 23:55:35 [INFO][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization][327]-> Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$604298a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-01 23:55:35 [INFO][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization][327]-> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4a2ff565] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-01 23:55:35 [INFO][org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer][initialize][92]-> Tomcat initialized with port(s): 1002 (http)
2018-07-01 23:55:35 [INFO][org.apache.catalina.core.StandardService][log][180]-> Starting service [Tomcat]
2018-07-01 23:55:35 [INFO][org.apache.catalina.core.StandardEngine][log][180]-> Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-01 23:55:35 [INFO][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]][log][180]-> Initializing Spring embedded WebApplicationContext
2018-07-01 23:55:35 [INFO][org.springframework.web.context.ContextLoader][prepareEmbeddedWebApplicationContext][276]-> Root WebApplicationContext: initialization completed in 1796 ms
2018-07-01 23:55:35 [INFO][org.springframework.boot.web.servlet.ServletRegistrationBean][onStartup][190]-> Mapping servlet: 'dispatcherServlet' to [/]
2018-07-01 23:55:35 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'metricsFilter' to: [/*]
2018-07-01 23:55:35 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-01 23:55:35 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-01 23:55:35 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-01 23:55:35 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'requestContextFilter' to: [/*]
2018-07-01 23:55:35 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-07-01 23:55:35 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-07-01 23:55:36 [INFO][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter][initControllerAdviceCache][534]-> Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@386f0da3: startup date [Sun Jul 01 23:55:33 GMT+08:00 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@49ec71f8
2018-07-01 23:55:37 [INFO][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register][543]-> Mapped "{[/service-info],methods=[GET]}" onto public java.lang.String com.esdeath.eurekaclient.EurekaClientApplication.dc(javax.servlet.http.HttpServletRequest)
2018-07-01 23:55:37 [INFO][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register][543]-> Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-01 23:55:37 [INFO][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register][543]-> Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-01 23:55:37 [INFO][org.springframework.web.servlet.handler.SimpleUrlHandlerMapping][registerHandler][362]-> Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-01 23:55:37 [INFO][org.springframework.web.servlet.handler.SimpleUrlHandlerMapping][registerHandler][362]-> Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-01 23:55:37 [INFO][org.springframework.web.servlet.handler.SimpleUrlHandlerMapping][registerHandler][362]-> Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-01 23:55:38 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-01 23:55:38 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-07-01 23:55:38 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-01 23:55:38 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-01 23:55:38 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-07-01 23:55:38 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-01 23:55:38 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-07-01 23:55:38 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-07-01 23:55:38 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-01 23:55:38 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-01 23:55:38 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-07-01 23:55:38 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-07-01 23:55:38 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-01 23:55:38 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-07-01 23:55:38 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-07-01 23:55:38 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-01 23:55:38 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-01 23:55:38 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-01 23:55:38 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-01 23:55:38 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-07-01 23:55:38 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-07-01 23:55:38 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-01 23:55:38 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-07-01 23:55:38 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-07-01 23:55:38 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-07-01 23:55:38 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-07-01 23:55:38 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-07-01 23:55:38 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-07-01 23:55:38 [WARN][com.netflix.config.sources.URLConfigurationSource][<init>][121]-> No URLs will be polled as dynamic configuration sources.
2018-07-01 23:55:38 [INFO][com.netflix.config.sources.URLConfigurationSource][<init>][122]-> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-01 23:55:38 [WARN][com.netflix.config.sources.URLConfigurationSource][<init>][121]-> No URLs will be polled as dynamic configuration sources.
2018-07-01 23:55:38 [INFO][com.netflix.config.sources.URLConfigurationSource][<init>][122]-> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-01 23:55:38 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][afterSingletonsInstantiated][431]-> Registering beans for JMX exposure on startup
2018-07-01 23:55:38 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][918]-> Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-07-01 23:55:38 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][918]-> Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-07-01 23:55:38 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][918]-> Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-07-01 23:55:38 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][918]-> Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-07-01 23:55:38 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][918]-> Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-07-01 23:55:38 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][918]-> Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-07-01 23:55:38 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][679]-> Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-07-01 23:55:38 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][679]-> Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-07-01 23:55:38 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][679]-> Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-07-01 23:55:39 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][679]-> Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-07-01 23:55:39 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][679]-> Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=386f0da3,type=ConfigurationPropertiesRebinder]
2018-07-01 23:55:39 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][679]-> Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-07-01 23:55:39 [INFO][org.springframework.context.support.DefaultLifecycleProcessor][start][341]-> Starting beans in phase 0
2018-07-01 23:55:39 [INFO][org.springframework.cloud.netflix.eureka.InstanceInfoFactory][create][70]-> Setting initial instance status as: STARTING
2018-07-01 23:55:39 [INFO][com.netflix.discovery.DiscoveryClient][<init>][344]-> Initializing Eureka in region us-east-1
2018-07-01 23:55:39 [INFO][com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>][70]-> Using JSON encoding codec LegacyJacksonJson
2018-07-01 23:55:39 [INFO][com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>][71]-> Using JSON decoding codec LegacyJacksonJson
2018-07-01 23:55:40 [INFO][com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>][80]-> Using XML encoding codec XStreamXml
2018-07-01 23:55:40 [INFO][com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>][81]-> Using XML decoding codec XStreamXml
2018-07-01 23:55:40 [INFO][com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints][43]-> Resolving eureka endpoints via configuration
2018-07-01 23:55:40 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][920]-> Disable delta property : false
2018-07-01 23:55:40 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][921]-> Single vip registry refresh property : null
2018-07-01 23:55:40 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][922]-> Force full registry fetch : false
2018-07-01 23:55:40 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][923]-> Application is null : false
2018-07-01 23:55:40 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][924]-> Registered Applications size is zero : true
2018-07-01 23:55:40 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][926]-> Application version is -1: true
2018-07-01 23:55:40 [INFO][com.netflix.discovery.DiscoveryClient][getAndStoreFullRegistry][1009]-> Getting all instance registry info from the eureka server
2018-07-01 23:55:40 [INFO][com.netflix.discovery.DiscoveryClient][getAndStoreFullRegistry][1018]-> The response status is 200
2018-07-01 23:55:40 [INFO][com.netflix.discovery.DiscoveryClient][initScheduledTasks][1244]-> Starting heartbeat executor: renew interval is: 30
2018-07-01 23:55:40 [INFO][com.netflix.discovery.InstanceInfoReplicator][<init>][59]-> InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-07-01 23:55:40 [INFO][com.netflix.discovery.DiscoveryClient][<init>][425]-> Discovery Client initialized at timestamp 1530460540688 with initial instances count: 1
2018-07-01 23:55:40 [INFO][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry][register][40]-> Registering application eureka-client with eureka with status UP
2018-07-01 23:55:40 [INFO][com.netflix.discovery.DiscoveryClient][notify][1279]-> Saw local status change event StatusChangeEvent [timestamp=1530460540712, current=UP, previous=STARTING]
2018-07-01 23:55:40 [INFO][com.netflix.discovery.DiscoveryClient][register][795]-> DiscoveryClient_EUREKA-CLIENT/LAPTOP-MOM0E0E6:eureka-client:1002: registering service...
2018-07-01 23:55:40 [INFO][com.netflix.discovery.DiscoveryClient][register][804]-> DiscoveryClient_EUREKA-CLIENT/LAPTOP-MOM0E0E6:eureka-client:1002 - registration status: 204
2018-07-01 23:55:40 [INFO][org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer][start][216]-> Tomcat started on port(s): 1002 (http)
2018-07-01 23:55:40 [INFO][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration][onApplicationEvent][117]-> Updating port to 1002
2018-07-01 23:55:40 [INFO][com.esdeath.eurekaclient.EurekaClientApplication][logStarted][57]-> Started EurekaClientApplication in 10.641 seconds (JVM running for 12.411)
2018-07-01 23:55:54 [INFO][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]][log][180]-> Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-01 23:55:54 [INFO][org.springframework.web.servlet.DispatcherServlet][initServletBean][489]-> FrameworkServlet 'dispatcherServlet': initialization started
2018-07-01 23:55:54 [INFO][org.springframework.web.servlet.DispatcherServlet][initServletBean][508]-> FrameworkServlet 'dispatcherServlet': initialization completed in 23 ms
2018-07-01 23:56:03 [INFO][com.esdeath.eurekaclient.EurekaClientApplication$$EnhancerBySpringCGLIB$$443de1e4][dc][32]-> 0:0:0:0:0:0:0:1访问info接口！
2018-07-02 00:00:14 [INFO][com.esdeath.eurekaclient.EurekaClientApplication$$EnhancerBySpringCGLIB$$443de1e4][dc][32]-> 0:0:0:0:0:0:0:1访问info接口！
2018-07-02 00:00:27 [INFO][com.esdeath.eurekaclient.EurekaClientApplication$$EnhancerBySpringCGLIB$$443de1e4][dc][32]-> 192.168.1.114访问info接口！
2018-07-02 00:00:40 [INFO][com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints][43]-> Resolving eureka endpoints via configuration
2018-07-02 00:01:18 [INFO][com.esdeath.eurekaclient.EurekaClientApplication$$EnhancerBySpringCGLIB$$443de1e4][dc][32]-> 192.168.1.114访问info接口！
2018-07-02 00:05:40 [INFO][com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints][43]-> Resolving eureka endpoints via configuration
2018-07-02 00:10:40 [INFO][com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints][43]-> Resolving eureka endpoints via configuration
2018-07-02 00:15:40 [INFO][com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints][43]-> Resolving eureka endpoints via configuration
2018-07-02 00:20:40 [INFO][com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints][43]-> Resolving eureka endpoints via configuration
2018-07-02 00:25:40 [INFO][com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints][43]-> Resolving eureka endpoints via configuration
2018-07-02 00:29:48 [INFO][com.esdeath.eurekaclient.EurekaClientApplication$$EnhancerBySpringCGLIB$$443de1e4][dc][32]-> 192.168.1.114访问info接口！
2018-07-02 00:29:50 [INFO][com.esdeath.eurekaclient.EurekaClientApplication$$EnhancerBySpringCGLIB$$443de1e4][dc][32]-> 192.168.1.114访问info接口！
2018-07-02 00:29:55 [INFO][com.esdeath.eurekaclient.EurekaClientApplication$$EnhancerBySpringCGLIB$$443de1e4][dc][32]-> 0:0:0:0:0:0:0:1访问info接口！
2018-07-02 00:30:40 [INFO][com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints][43]-> Resolving eureka endpoints via configuration
2018-07-02 00:31:00 [INFO][com.esdeath.eurekaclient.EurekaClientApplication$$EnhancerBySpringCGLIB$$443de1e4][dc][32]-> 192.168.1.114访问info接口！
2018-07-02 00:31:17 [INFO][com.esdeath.eurekaclient.EurekaClientApplication$$EnhancerBySpringCGLIB$$443de1e4][dc][32]-> 192.168.1.114访问info接口！
2018-07-02 00:32:15 [INFO][com.esdeath.eurekaclient.EurekaClientApplication$$EnhancerBySpringCGLIB$$443de1e4][dc][32]-> 192.168.1.114访问info接口！
2018-07-02 00:35:40 [INFO][com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints][43]-> Resolving eureka endpoints via configuration
2018-07-02 00:40:40 [INFO][com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints][43]-> Resolving eureka endpoints via configuration
2018-07-02 00:43:40 [INFO][com.esdeath.eurekaclient.EurekaClientApplication][logStartupProfileInfo][593]-> No active profile set, falling back to default profiles: default
2018-07-02 00:43:40 [INFO][org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext][prepareRefresh][583]-> Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3a12c404: startup date [Mon Jul 02 00:43:40 GMT+08:00 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@55141def
2018-07-02 00:43:43 [INFO][org.springframework.cloud.context.scope.GenericScope][setSerializationId][263]-> BeanFactory id=5f9eae66-6353-311f-b7b8-808a09db89b6
2018-07-02 00:43:43 [INFO][org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor][<init>][155]-> JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-02 00:43:43 [INFO][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization][327]-> Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$2baf00e4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-02 00:43:43 [INFO][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization][327]-> Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$f0d2a953] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-02 00:43:44 [INFO][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization][327]-> Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-02 00:43:44 [INFO][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization][327]-> Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$209a0962] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-02 00:43:44 [INFO][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization][327]-> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a87661e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-02 00:43:44 [INFO][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization][327]-> Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$d6510f40] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-02 00:43:45 [INFO][org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer][initialize][92]-> Tomcat initialized with port(s): 1002 (http)
2018-07-02 00:43:45 [INFO][org.apache.catalina.core.StandardService][log][180]-> Starting service [Tomcat]
2018-07-02 00:43:45 [INFO][org.apache.catalina.core.StandardEngine][log][180]-> Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-02 00:43:45 [INFO][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]][log][180]-> Initializing Spring embedded WebApplicationContext
2018-07-02 00:43:45 [INFO][org.springframework.web.context.ContextLoader][prepareEmbeddedWebApplicationContext][276]-> Root WebApplicationContext: initialization completed in 5743 ms
2018-07-02 00:43:47 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'metricsFilter' to: [/*]
2018-07-02 00:43:47 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-02 00:43:47 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'traceFilter' to: [/*]
2018-07-02 00:43:47 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-02 00:43:47 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-02 00:43:47 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'requestContextFilter' to: [/*]
2018-07-02 00:43:47 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-07-02 00:43:47 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-07-02 00:43:47 [INFO][org.springframework.boot.web.servlet.ServletRegistrationBean][onStartup][190]-> Mapping servlet: 'dispatcherServlet' to [/]
2018-07-02 00:43:49 [INFO][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter][initControllerAdviceCache][534]-> Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3a12c404: startup date [Mon Jul 02 00:43:40 GMT+08:00 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@55141def
2018-07-02 00:43:50 [INFO][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register][543]-> Mapped "{[/service-info],methods=[GET]}" onto public java.lang.String com.esdeath.eurekaclient.EurekaClientApplication.dc(javax.servlet.http.HttpServletRequest)
2018-07-02 00:43:50 [INFO][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register][543]-> Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-02 00:43:50 [INFO][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register][543]-> Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-02 00:43:50 [INFO][org.springframework.web.servlet.handler.SimpleUrlHandlerMapping][registerHandler][362]-> Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-02 00:43:50 [INFO][org.springframework.web.servlet.handler.SimpleUrlHandlerMapping][registerHandler][362]-> Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-02 00:43:50 [INFO][org.springframework.web.servlet.handler.SimpleUrlHandlerMapping][registerHandler][362]-> Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-02 00:43:52 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-07-02 00:43:52 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-07-02 00:43:52 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-02 00:43:52 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-07-02 00:43:52 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-07-02 00:43:52 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-07-02 00:43:52 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-07-02 00:43:52 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-02 00:43:52 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-07-02 00:43:52 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-07-02 00:43:52 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-07-02 00:43:52 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-02 00:43:52 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-02 00:43:52 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-02 00:43:52 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-07-02 00:43:52 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-07-02 00:43:52 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-07-02 00:43:52 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-07-02 00:43:52 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-02 00:43:52 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-07-02 00:43:52 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-02 00:43:52 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-02 00:43:52 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-07-02 00:43:52 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-02 00:43:52 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-02 00:43:52 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-07-02 00:43:52 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-02 00:43:52 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-02 00:43:53 [WARN][com.netflix.config.sources.URLConfigurationSource][<init>][121]-> No URLs will be polled as dynamic configuration sources.
2018-07-02 00:43:53 [INFO][com.netflix.config.sources.URLConfigurationSource][<init>][122]-> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-02 00:43:53 [WARN][com.netflix.config.sources.URLConfigurationSource][<init>][121]-> No URLs will be polled as dynamic configuration sources.
2018-07-02 00:43:53 [INFO][com.netflix.config.sources.URLConfigurationSource][<init>][122]-> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-02 00:43:53 [INFO][org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler][initialize][165]-> Initializing ExecutorService 
2018-07-02 00:43:54 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][afterSingletonsInstantiated][431]-> Registering beans for JMX exposure on startup
2018-07-02 00:43:54 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][918]-> Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-07-02 00:43:54 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][918]-> Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-07-02 00:43:54 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][918]-> Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-07-02 00:43:54 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][918]-> Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-07-02 00:43:54 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][918]-> Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-07-02 00:43:54 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][918]-> Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-07-02 00:43:54 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][679]-> Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-07-02 00:43:54 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][679]-> Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-07-02 00:43:54 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][679]-> Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-07-02 00:43:54 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][679]-> Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-07-02 00:43:54 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][679]-> Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=3a12c404,type=ConfigurationPropertiesRebinder]
2018-07-02 00:43:54 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][679]-> Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-07-02 00:43:54 [INFO][org.springframework.context.support.DefaultLifecycleProcessor][start][341]-> Starting beans in phase 0
2018-07-02 00:43:54 [INFO][org.springframework.cloud.netflix.eureka.InstanceInfoFactory][create][70]-> Setting initial instance status as: STARTING
2018-07-02 00:43:54 [INFO][com.netflix.discovery.DiscoveryClient][<init>][344]-> Initializing Eureka in region us-east-1
2018-07-02 00:43:55 [INFO][com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>][70]-> Using JSON encoding codec LegacyJacksonJson
2018-07-02 00:43:55 [INFO][com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>][71]-> Using JSON decoding codec LegacyJacksonJson
2018-07-02 00:43:55 [INFO][com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>][80]-> Using XML encoding codec XStreamXml
2018-07-02 00:43:55 [INFO][com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>][81]-> Using XML decoding codec XStreamXml
2018-07-02 00:43:55 [INFO][com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints][43]-> Resolving eureka endpoints via configuration
2018-07-02 00:43:56 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][920]-> Disable delta property : false
2018-07-02 00:43:56 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][921]-> Single vip registry refresh property : null
2018-07-02 00:43:56 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][922]-> Force full registry fetch : false
2018-07-02 00:43:56 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][923]-> Application is null : false
2018-07-02 00:43:56 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][924]-> Registered Applications size is zero : true
2018-07-02 00:43:56 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][926]-> Application version is -1: true
2018-07-02 00:43:56 [INFO][com.netflix.discovery.DiscoveryClient][getAndStoreFullRegistry][1009]-> Getting all instance registry info from the eureka server
2018-07-02 00:43:57 [INFO][com.netflix.discovery.DiscoveryClient][getAndStoreFullRegistry][1018]-> The response status is 200
2018-07-02 00:43:57 [INFO][com.netflix.discovery.DiscoveryClient][initScheduledTasks][1244]-> Starting heartbeat executor: renew interval is: 30
2018-07-02 00:43:57 [INFO][com.netflix.discovery.InstanceInfoReplicator][<init>][59]-> InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-07-02 00:43:57 [INFO][com.netflix.discovery.DiscoveryClient][<init>][425]-> Discovery Client initialized at timestamp 1530463437304 with initial instances count: 3
2018-07-02 00:43:57 [INFO][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry][register][40]-> Registering application eureka-client with eureka with status UP
2018-07-02 00:43:57 [INFO][com.netflix.discovery.DiscoveryClient][notify][1279]-> Saw local status change event StatusChangeEvent [timestamp=1530463437540, current=UP, previous=STARTING]
2018-07-02 00:43:57 [INFO][com.netflix.discovery.DiscoveryClient][register][795]-> DiscoveryClient_EUREKA-CLIENT/LAPTOP-MOM0E0E6:eureka-client:1002: registering service...
2018-07-02 00:43:57 [INFO][com.netflix.discovery.DiscoveryClient][register][804]-> DiscoveryClient_EUREKA-CLIENT/LAPTOP-MOM0E0E6:eureka-client:1002 - registration status: 204
2018-07-02 00:43:57 [INFO][org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer][start][216]-> Tomcat started on port(s): 1002 (http)
2018-07-02 00:43:57 [INFO][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration][onApplicationEvent][117]-> Updating port to 1002
2018-07-02 00:43:57 [INFO][com.esdeath.eurekaclient.EurekaClientApplication][logStarted][57]-> Started EurekaClientApplication in 25.338 seconds (JVM running for 30.279)
2018-07-02 00:44:52 [INFO][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]][log][180]-> Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-02 00:44:52 [INFO][org.springframework.web.servlet.DispatcherServlet][initServletBean][489]-> FrameworkServlet 'dispatcherServlet': initialization started
2018-07-02 00:44:52 [INFO][org.springframework.web.servlet.DispatcherServlet][initServletBean][508]-> FrameworkServlet 'dispatcherServlet': initialization completed in 50 ms
2018-07-02 00:44:53 [INFO][com.esdeath.eurekaclient.EurekaClientApplication$$EnhancerBySpringCGLIB$$495529d][dc][32]-> 192.168.1.114访问info接口！
2018-07-02 00:45:24 [INFO][com.esdeath.eurekaclient.EurekaClientApplication$$EnhancerBySpringCGLIB$$495529d][dc][32]-> 192.168.1.114访问info接口！
2018-07-02 00:46:26 [INFO][com.esdeath.eurekaclient.EurekaClientApplication][logStartupProfileInfo][593]-> No active profile set, falling back to default profiles: default
2018-07-02 00:46:26 [INFO][org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext][prepareRefresh][583]-> Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3a12c404: startup date [Mon Jul 02 00:46:26 GMT+08:00 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@55141def
2018-07-02 00:46:28 [INFO][org.springframework.cloud.context.scope.GenericScope][setSerializationId][263]-> BeanFactory id=5f9eae66-6353-311f-b7b8-808a09db89b6
2018-07-02 00:46:28 [INFO][org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor][<init>][155]-> JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-02 00:46:29 [INFO][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization][327]-> Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$2baf00e4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-02 00:46:29 [INFO][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization][327]-> Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$f0d2a953] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-02 00:46:29 [INFO][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization][327]-> Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-02 00:46:29 [INFO][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization][327]-> Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$209a0962] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-02 00:46:29 [INFO][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization][327]-> Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a87661e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-02 00:46:29 [INFO][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker][postProcessAfterInitialization][327]-> Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$d6510f40] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-02 00:46:30 [INFO][org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer][initialize][92]-> Tomcat initialized with port(s): 1002 (http)
2018-07-02 00:46:30 [INFO][org.apache.catalina.core.StandardService][log][180]-> Starting service [Tomcat]
2018-07-02 00:46:30 [INFO][org.apache.catalina.core.StandardEngine][log][180]-> Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-02 00:46:30 [INFO][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]][log][180]-> Initializing Spring embedded WebApplicationContext
2018-07-02 00:46:30 [INFO][org.springframework.web.context.ContextLoader][prepareEmbeddedWebApplicationContext][276]-> Root WebApplicationContext: initialization completed in 4436 ms
2018-07-02 00:46:31 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'metricsFilter' to: [/*]
2018-07-02 00:46:31 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-02 00:46:31 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'traceFilter' to: [/*]
2018-07-02 00:46:31 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-02 00:46:31 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-02 00:46:31 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'requestContextFilter' to: [/*]
2018-07-02 00:46:31 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-07-02 00:46:31 [INFO][org.springframework.boot.web.servlet.FilterRegistrationBean][configure][258]-> Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-07-02 00:46:31 [INFO][org.springframework.boot.web.servlet.ServletRegistrationBean][onStartup][190]-> Mapping servlet: 'dispatcherServlet' to [/]
2018-07-02 00:46:34 [INFO][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter][initControllerAdviceCache][534]-> Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3a12c404: startup date [Mon Jul 02 00:46:26 GMT+08:00 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@55141def
2018-07-02 00:46:34 [INFO][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register][543]-> Mapped "{[/service-info],methods=[GET]}" onto public java.lang.String com.esdeath.eurekaclient.EurekaClientApplication.dc(javax.servlet.http.HttpServletRequest)
2018-07-02 00:46:34 [INFO][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register][543]-> Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-02 00:46:34 [INFO][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][register][543]-> Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-02 00:46:34 [INFO][org.springframework.web.servlet.handler.SimpleUrlHandlerMapping][registerHandler][362]-> Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-02 00:46:34 [INFO][org.springframework.web.servlet.handler.SimpleUrlHandlerMapping][registerHandler][362]-> Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-02 00:46:35 [INFO][org.springframework.web.servlet.handler.SimpleUrlHandlerMapping][registerHandler][362]-> Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-02 00:46:36 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-02 00:46:36 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-07-02 00:46:36 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-07-02 00:46:36 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-02 00:46:36 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-07-02 00:46:36 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-02 00:46:36 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-02 00:46:36 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-02 00:46:36 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-07-02 00:46:36 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-07-02 00:46:36 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-07-02 00:46:36 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-07-02 00:46:36 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-07-02 00:46:36 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-02 00:46:36 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-07-02 00:46:36 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-07-02 00:46:36 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-02 00:46:36 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-02 00:46:36 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-07-02 00:46:36 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-07-02 00:46:36 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-07-02 00:46:36 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-02 00:46:36 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-02 00:46:36 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-07-02 00:46:36 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-07-02 00:46:36 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-07-02 00:46:36 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-02 00:46:36 [INFO][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping][register][543]-> Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-07-02 00:46:37 [WARN][com.netflix.config.sources.URLConfigurationSource][<init>][121]-> No URLs will be polled as dynamic configuration sources.
2018-07-02 00:46:37 [INFO][com.netflix.config.sources.URLConfigurationSource][<init>][122]-> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-02 00:46:37 [WARN][com.netflix.config.sources.URLConfigurationSource][<init>][121]-> No URLs will be polled as dynamic configuration sources.
2018-07-02 00:46:37 [INFO][com.netflix.config.sources.URLConfigurationSource][<init>][122]-> To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-07-02 00:46:37 [INFO][org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler][initialize][165]-> Initializing ExecutorService 
2018-07-02 00:46:38 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][afterSingletonsInstantiated][431]-> Registering beans for JMX exposure on startup
2018-07-02 00:46:38 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][918]-> Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-07-02 00:46:38 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][918]-> Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-07-02 00:46:38 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][918]-> Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-07-02 00:46:38 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][918]-> Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-07-02 00:46:38 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][918]-> Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-07-02 00:46:38 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][918]-> Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-07-02 00:46:38 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][679]-> Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-07-02 00:46:38 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][679]-> Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-07-02 00:46:38 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][679]-> Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-07-02 00:46:38 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][679]-> Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-07-02 00:46:38 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][679]-> Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=3a12c404,type=ConfigurationPropertiesRebinder]
2018-07-02 00:46:38 [INFO][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][679]-> Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-07-02 00:46:38 [INFO][org.springframework.context.support.DefaultLifecycleProcessor][start][341]-> Starting beans in phase 0
2018-07-02 00:46:38 [INFO][org.springframework.cloud.netflix.eureka.InstanceInfoFactory][create][70]-> Setting initial instance status as: STARTING
2018-07-02 00:46:38 [INFO][com.netflix.discovery.DiscoveryClient][<init>][344]-> Initializing Eureka in region us-east-1
2018-07-02 00:46:39 [INFO][com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>][70]-> Using JSON encoding codec LegacyJacksonJson
2018-07-02 00:46:39 [INFO][com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>][71]-> Using JSON decoding codec LegacyJacksonJson
2018-07-02 00:46:39 [INFO][com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>][80]-> Using XML encoding codec XStreamXml
2018-07-02 00:46:39 [INFO][com.netflix.discovery.provider.DiscoveryJerseyProvider][<init>][81]-> Using XML decoding codec XStreamXml
2018-07-02 00:46:40 [INFO][com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints][43]-> Resolving eureka endpoints via configuration
2018-07-02 00:46:40 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][920]-> Disable delta property : false
2018-07-02 00:46:40 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][921]-> Single vip registry refresh property : null
2018-07-02 00:46:40 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][922]-> Force full registry fetch : false
2018-07-02 00:46:40 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][923]-> Application is null : false
2018-07-02 00:46:40 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][924]-> Registered Applications size is zero : true
2018-07-02 00:46:40 [INFO][com.netflix.discovery.DiscoveryClient][fetchRegistry][926]-> Application version is -1: true
2018-07-02 00:46:40 [INFO][com.netflix.discovery.DiscoveryClient][getAndStoreFullRegistry][1009]-> Getting all instance registry info from the eureka server
2018-07-02 00:46:40 [INFO][com.netflix.discovery.DiscoveryClient][getAndStoreFullRegistry][1018]-> The response status is 200
2018-07-02 00:46:40 [INFO][com.netflix.discovery.DiscoveryClient][initScheduledTasks][1244]-> Starting heartbeat executor: renew interval is: 30
2018-07-02 00:46:40 [INFO][com.netflix.discovery.InstanceInfoReplicator][<init>][59]-> InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-07-02 00:46:40 [INFO][com.netflix.discovery.DiscoveryClient][<init>][425]-> Discovery Client initialized at timestamp 1530463600876 with initial instances count: 4
2018-07-02 00:46:40 [INFO][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry][register][40]-> Registering application eureka-client with eureka with status UP
2018-07-02 00:46:40 [INFO][com.netflix.discovery.DiscoveryClient][notify][1279]-> Saw local status change event StatusChangeEvent [timestamp=1530463600916, current=UP, previous=STARTING]
2018-07-02 00:46:40 [INFO][com.netflix.discovery.DiscoveryClient][register][795]-> DiscoveryClient_EUREKA-CLIENT/LAPTOP-MOM0E0E6:eureka-client:1002: registering service...
2018-07-02 00:46:40 [INFO][com.netflix.discovery.DiscoveryClient][register][804]-> DiscoveryClient_EUREKA-CLIENT/LAPTOP-MOM0E0E6:eureka-client:1002 - registration status: 204
2018-07-02 00:46:41 [INFO][org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer][start][216]-> Tomcat started on port(s): 1002 (http)
2018-07-02 00:46:41 [INFO][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration][onApplicationEvent][117]-> Updating port to 1002
2018-07-02 00:46:41 [INFO][com.esdeath.eurekaclient.EurekaClientApplication][logStarted][57]-> Started EurekaClientApplication in 18.559 seconds (JVM running for 22.384)
2018-07-02 00:48:44 [INFO][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]][log][180]-> Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-02 00:48:44 [INFO][org.springframework.web.servlet.DispatcherServlet][initServletBean][489]-> FrameworkServlet 'dispatcherServlet': initialization started
2018-07-02 00:48:44 [INFO][org.springframework.web.servlet.DispatcherServlet][initServletBean][508]-> FrameworkServlet 'dispatcherServlet': initialization completed in 39 ms
2018-07-02 00:48:44 [INFO][com.esdeath.eurekaclient.EurekaClientApplication$$EnhancerBySpringCGLIB$$495529d][dc][32]-> 192.168.1.114访问info接口！
2018-07-02 00:51:39 [INFO][com.esdeath.eurekaclient.EurekaClientApplication$$EnhancerBySpringCGLIB$$495529d][dc][32]-> 0:0:0:0:0:0:0:1访问info接口！
2018-07-02 00:51:40 [INFO][com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver][getClusterEndpoints][43]-> Resolving eureka endpoints via configuration
